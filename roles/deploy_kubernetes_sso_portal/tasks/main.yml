- name: Create secret seeds
  ansible.builtin.set_fact:
    jwt_secret_seed: "{{ inventory_hostname }}-jwt_secret"
    session_secret_seed: "{{ inventory_hostname }}-session_secret"
- name: Generate secrets
  ansible.builtin.set_fact:
    jwt_secret: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=64', seed=jwt_secret_seed) }}"
    session_secret: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=64', seed=session_secret_seed) }}"
- name: Ensure docker deamon is running
  become: true
  ansible.builtin.service:
    name: docker
    state: started
- name: Hash admin password
  become: true
  ansible.builtin.shell:
    cmd: "docker run authelia/authelia:latest authelia crypto hash generate argon2 --password {{ admin_password }}"
  register: this
  changed_when: false
- name: Get admin password hash
  ansible.builtin.set_fact:
    admin_password_hash: "{{this.stdout_lines[0] | split(': ') | last }}"
- name: Create k8s namespace
  kubernetes.core.k8s:
    state: present
    kind: namespace
    name: authelia
- name: Add deployment and service
  block:
  - name: Get checksums
    ansible.builtin.set_fact:
      secret_checksum: "{{ lookup('ansible.builtin.template', 'secret.yaml') | checksum }}"
  - name: Apply K8s resources
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('ansible.builtin.template', item) }}"
      wait: true
    with_items:
      - secret.yaml
      - deployment.yaml
      - service.yaml
      - forward_auth_middleware.yaml
      - ingress_route.yaml
  vars:
    name: authelia
    namespace: authelia
    port: 9091
    path: /ssoauth
    path_no_slash: "{{ path | regex_replace('/') }}"
- name: Get an existing Service object
  kubernetes.core.k8s_info:
    kind: Service
    name: traefik
    namespace: kube-system
  register: load_balancer
- name: Set load balancer ip
  ansible.builtin.set_fact:
    load_balancer_ip: "{{ load_balancer.resources[0].status.loadBalancer.ingress[0].ip }}"
- name: Test a request to the service.
  ansible.builtin.uri:
    url: http://{{ load_balancer_ip }}/ssoauth
    return_content: true
  register: this
  until: this.status == 200
  retries: 5
  delay: 1
  failed_when: "'Login - Authelia' not in this.content"